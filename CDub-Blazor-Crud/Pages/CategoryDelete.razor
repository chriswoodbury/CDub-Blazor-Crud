@page "/category/delete/{id:int}"

@using CDub_Blazor_Crud.Repository
@using CDub_Blazor_Crud.Models

@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager
@inject IToastService _toastService

@if (IsLoading)
{
    <div class="text-center pt-5">
        <img src="images/ajax-loader.gif" alt="" />
        <br />
        loading...
    </div>
}
else
{

    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h4 class="text-primary">Delete Category</h4>
            <hr />
        </div>

        <div class="pt-2"></div>

        <EditForm Model="Category" OnValidSubmit="DeleteCategory">

            <div class="form-group">
                <label>Name</label>
                <InputText readonly @bind-Value="Category.Name" class="form-control"></InputText>
            </div>

            <div class="form-group pt-4">
                <label>Display Order</label>
                <InputNumber readonly @bind-Value="Category.DisplayOrder" class="form-control"></InputNumber>
            </div>

            <div class="form-group pt-4">
                <button class="btn btn-primary" style="width: 150px;">Delete</button>
                <a href="/category" class="btn btn-secondary" style="width: 150px;">
                    Back to List
                </a>
            </div>

        </EditForm>

    </div>

}


@code {
    [Parameter]
    public int Id { get; set; }

    private Category Category { get; set; } = new Category();
    private bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategory();
        }
    }

    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await _categoryRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task DeleteCategory()
    {
       await _categoryRepository.Delete(Id);
       _toastService.ShowSuccess("Category deleted successfully.");
       _navigationManager.NavigateTo("/category");
    }
}
